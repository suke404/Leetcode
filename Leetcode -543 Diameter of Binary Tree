/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    //Find the maximum depth first
    int maxDepth(int &maxdepth, TreeNode* root) {
        if(!root) return 0;
        int maxLeft = maxDepth(maxdepth,root->left);
        int maxRight = maxDepth(maxdepth,root->right);
        maxdepth = max(maxdepth, maxLeft+maxRight); // update longest
        return 1+max(maxLeft, maxRight); 
    }

    int diameterOfBinaryTree(TreeNode* root) {
        int depth = 0;
        int dummy = maxDepth(depth, root);
        return depth;

    }
};